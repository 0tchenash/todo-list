version: '3.9'

services:
  front:
    image: sermalenk/skypro-front:lesson-37
    ports:
      - 8080:80
    depends_on:
      - api

  bot:
    build: .
    env_file:
      - ./.env
    environment:
      DB_HOST: db
    depends_on:
      - db
      - migrations
    
    command: >
      sh -c "python3 ./todolist/manage.py runbot"

  api:
    build: .
    env_file:
      - ./.env    
    depends_on:
      - migrations
      - db
    environment:
      DB_HOST: db


  migrations:
    build: .
    env_file:
      - ./.env    
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
    command: >
      sh -c "python3 ./todolist/manage.py migrate"

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    ports:
      - 5433:5432
    # volumes:
    #   - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5 
      